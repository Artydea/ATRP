https://people.sc.fsu.edu/~jburkardt/
https://www.graphics.rwth-aachen.de/media/openmesh_static/Documentations/OpenMesh-Doc-Latest/
https://stackoverflow.com/questions/13263356/half-edge-twins
https://kaba.hilvi.org/homepage/blog/halfedge/halfedge.htm
https://courses.physics.illinois.edu/cs357/sp2020/notes/ref-4-fp.html
https://cr.yp.to/2005-590/goldberg.pdf#:~:text=What%20Every%20Computer%20Scientist%20Should%20Know%20About%20Floating,situation%20is%20illustrated%20by%20the%20decimal%20number%200.1.
https://learnopengl.com/In-Practice/2D-Game/Collisions/Collision-detection
https://www.glfw.org/documentation.html
http://www.opengl-tutorial.org/miscellaneous/building-your-own-c-application/
http://www.opengl-tutorial.org/beginners-tutorials/tutorial-1-opening-a-window/
https://nehe.gamedev.net/tutorial/creating_an_opengl_window_(win32)/13001/
https://mathinsight.org/distance_point_plane
https://www.glfw.org/download.html
https://social.msdn.microsoft.com/forums/en-US/374d05bb-aee7-4bbe-b8ea-15ab606021c5/how-to-import-a-lib-and-dll-into-the-project
https://www.glfw.org/docs/latest/quick_guide.html#quick_example
https://antongerdelan.net/opengl/hellotriangle.html
https://open.gl/drawing
https://learnopengl.com/Getting-started/Shaders
https://learnopengl.com/Lighting/Basic-Lighting
https://learnopengl.com/code_viewer_gh.php?code=src/2.lighting/2.2.basic_lighting_specular/basic_lighting_specular.cpp
https://learnopengl.com/code_viewer_gh.php?code=includes/learnopengl/shader.h
https://learnopengl.com/Lighting/Colors
http://www.songho.ca/opengl/gl_projectionmatrix.html
http://www.songho.ca/opengl/gl_camera.html
https://learnopengl.com/Getting-started/Camera
https://learnopengl.com/Getting-started/Coordinate-Systems
https://learnopengl.com/Getting-started/Transformations
https://learnopengl.com/Getting-started/Hello-Triangle
https://learnopengl.com/code_viewer_gh.php?code=src/1.getting_started/2.1.hello_triangle/hello_triangle.cpp
https://devblogs.microsoft.com/oldnewthing/20200513-00/?p=103745#:~:text=The%20std%3A%3Afunction%20in%20the%20standard%20library%20is%20basically,is%20a%20plain%20function%20pointer%20or%20a%20reference_wrapper.
https://devblogs.microsoft.com/oldnewthing/20200514-00/?p=103749
https://stackoverflow.com/questions/4693017/forcing-opengl-core-profile-only
https://www.khronos.org/opengl/wiki/Uniform_(GLSL)
https://www.khronos.org/opengl/wiki/How_lighting_works
https://www.just.edu.jo/~yaser/courses/cs480/Tutorials/OpenGl%20-%20Chapter%208%20%20Light%20&%20Material.htm
https://math.hws.edu/graphicsbook/c4/s1.html#gl1light.1.2
https://paroj.github.io/gltut/Illumination/Tut10%20Distant%20Points%20of%20Light.html
https://www.glprogramming.com/red/chapter05.html#name4
https://www.glprogramming.com/red/chapter06.html
https://www.glprogramming.com/red/chapter02.html#name5
http://www.opengl-tutorial.org/intermediate-tutorials/tutorial-13-normal-mapping/
https://gdbooks.gitbooks.io/legacyopengl/content/Chapter5/norms.html
http://www.codinglabs.net/article_world_view_projection_matrix.aspx
https://gdbooks.gitbooks.io/legacyopengl/content/Chapter4/stacks.html
https://gdbooks.gitbooks.io/legacyopengl/content/Chapter5/light_spotlight.html
https://stackoverflow.com/questions/24040982/c-opengl-glfw-drawing-a-simple-cube
https://web.archive.org/web/20171015143947/https://sjbaker.org/steve/omniv/projection_abuse.html
https://www.khronos.org/opengl/wiki/Viewing_and_Transformations#How_do_I_get_the_active_MODELVIEW_or_PROJECTION_matrices.3F
https://registry.khronos.org/OpenGL-Refpages/gl2.1/xhtml/glMatrixMode.xml
https://github.com/ApoorvaJ/Papaya/blob/3808e39b0f45d4ca4972621c847586e4060c042a/src/libs/gl_lite.h
http://www.opengl-tutorial.org/intermediate-tutorials/tutorial-9-vbo-indexing/
https://learnopengl.com/Advanced-OpenGL/Instancing
https://stackoverflow.com/questions/29997209/opengl-c-mouse-ray-picking-glmunproject
https://stackoverflow.com/questions/9901453/using-glms-unproject
https://community.khronos.org/t/zoom-to-fit-screen/59857/7
https://www.tutorialspoint.com/dll/dll_writing.htm
http://www.codeincodeblock.com/2012/04/glfw-opengl-framework-tutorial-2.html
https://devblogs.microsoft.com/oldnewthing/20040129-00/?p=40833
https://learn.microsoft.com/en-us/cpp/build/walkthrough-creating-and-using-a-dynamic-link-library-cpp?view=msvc-170
https://codeyarns.com/tech/2015-09-14-how-to-check-error-in-opengl.html#gsc.tab=0
https://community.khronos.org/t/opengl-inside-dll-issues/50810
https://stackoverflow.com/questions/5571534/opengl-light-source-that-follows-the-camera
https://stackoverflow.com/questions/2592523/about-inconsistent-dll-linkage
https://link.springer.com/article/10.1007/s12065-020-00559-6#citeas
https://viterbi-web.usc.edu/~jbarbic/ccd/
https://en.wikipedia.org/wiki/Collision_detection
https://graphics.stanford.edu/~jgao/collision-detection.html
http://gamma-web.iacs.umd.edu/FCL/sensorcollision.pdf
http://www.euclideanspace.com/maths/geometry/affine/index.htm
https://viterbi-web.usc.edu/~jbarbic/ccd/XuBarbicVRIPHYS2014.pdf
https://www.cs.princeton.edu/courses/archive/fall00/cs426/
https://c-faq.com/fp/fpequal.html
https://rootllama.wordpress.com/2014/06/20/ray-line-segment-intersection-test-in-2d/
https://stackoverflow.com/questions/14307158/how-do-you-check-for-intersection-between-a-line-segment-and-a-line-ray-emanatin
https://stackoverflow.com/questions/563198/how-do-you-detect-where-two-line-segments-intersect/565282#565282
https://blackpawn.com/texts/pointinpoly/#:~:text=A%20common%20way%20to%20check%20if%20a%20point,not.%20It%20works%2C%20but%20it%20is%20very%20slow.
http://cgm.cs.mcgill.ca/~godfried/teaching/cg-projects/97/Ian/algorithm2.html
http://cgm.cs.mcgill.ca/~godfried/teaching/cg-projects/97/Ian/introduction.html
https://www.youtube.com/watch?v=hTJFcHutls8
https://www.youtube.com/channel/UCsCBEU7sWvEMlTzP3jE0olg
https://www.youtube.com/watch?v=xIRqUAZsOdg
https://www.youtube.com/watch?v=V3wZKmyS5us
https://www.youtube.com/watch?v=LBUgWiU3Rvk
https://www.youtube.com/watch?v=GctAunEuHt4
https://en.wikipedia.org/wiki/Polygon_triangulation
https://en.wikipedia.org/wiki/Line%E2%80%93plane_intersection
http://cgm.cs.mcgill.ca/~godfried/teaching/cg-projects/97/Ian/onemouth.html
https://sites.math.washington.edu/~king/coursedir/m445w04/notes/vector/index.html
https://www.stroustrup.com/bs_faq2.html#coding-standard
http://cgm.cs.mcgill.ca/~godfried/teaching/cg-projects/97/Ian/algorithm1.html
http://cgm.cs.mcgill.ca/~godfried/teaching/cg-projects/97/Ian/applets/BruteForceEarCut.java
https://github.com/isocpp/CppCoreGuidelines/blob/master/CppCoreGuidelines.md#Rper-low
https://herbsutter.com/
https://en.wikipedia.org/wiki/Sphericon
https://sites.math.washington.edu/~king/coursedir/m445w04/notes/vector/normals-planes.html
https://math.stackexchange.com/questions/633181/formula-to-project-a-vector-onto-a-plane
https://en.wikipedia.org/wiki/Vector_projection#:~:text=The%20projection%20of%20a%20vector%20on%20a%20plane,straight%20line%20which%20is%20orthogonal%20to%20that%20plane.
https://en.wikipedia.org/wiki/Kahan_summation_algorithm
https://en.wikipedia.org/wiki/Catastrophic_cancellation
https://en.wikipedia.org/wiki/Cross_product
https://www.techiedelight.com/remove-duplicates-vector-cpp/#:~:text=Using%20std%3A%3Aremove%20function%20A%20simple%20solution%20is%20to,the%20std%3A%3Aremove%20algorithm%20that%20makes%20our%20code%20elegant.
https://stackoverflow.com/questions/61676388/how-to-tell-if-a-point-is-on-the-left-or-right-side-of-a-line-segment#:~:text=Now%20you%20have%20a%20point%20%28e%2C%20f%29.%20If,that%20means%20your%20point%20is%20below%20the%20line.
https://stackoverflow.com/questions/17173633/determine-if-vertex-is-convex-help-understanding
https://www.mathopenref.com/coordtrianglearea.html
https://en.wikipedia.org/wiki/Gift_wrapping_algorithm
http://www.dgp.toronto.edu/~neff/teaching/418/transformations/transformation.html
https://math.stackexchange.com/questions/180418/calculate-rotation-matrix-to-align-vector-a-to-vector-b-in-3d
https://www.geometrictools.com/Documentation/TriangulationByEarClipping.pdf#:~:text=ngrows%20without%20bound.%20The%20simplest%20algorithm%2C%20calledear%20clipping%2C,complicated.%20Itappears%20that%20no%20implementation%20is%20publicly%20available.
https://www.geometrictools.com/GTE/Mathematics/TriangulateCDT.h
https://www.grasshopper3d.com/forum/topics/mesh-splitting-trimming
https://towardsdatascience.com/is-the-point-inside-the-polygon-574b86472119
https://www.geeksforgeeks.org/equation-of-a-line-in-3d/
https://www.eng-tips.com/viewthread.cfm?qid=418204
https://www.eng.uc.edu/~beaucag/Classes/Properties/OptionalProjects/CoordinateTransformationCode/Rotate%20about%20an%20arbitrary%20axis%20(3%20dimensions).html#:~:text=Rotate%20a%20pointabout%20an%20arbitrary%20axis%283%20dimensions%29%20Step,U%20%3D%20%28a%2Cb%2Cc%29%20be%20the%20unit%20vector...%20
https://www.scratchapixel.com/lessons/mathematics-physics-for-computer-graphics/geometry/transforming-points-and-vectors
https://limnu.com/sketch-easy-90-degree-rotate-vectors/#:~:text=Normally%20rotating%20vectors%20involves%20matrix%20math%2C%20but%20there%E2%80%99s,-1%2C%20and%20then%20swap%20X%20and%20Y%20values.
https://devblogs.microsoft.com/oldnewthing/20091130-00/?p=15863
https://math.stackexchange.com/questions/4432127/intersection-between-segment-and-plane
https://math.stackexchange.com/questions/1936020/why-is-the-inverse-of-an-orthogonal-matrix-equal-to-its-transpose
http://answers.google.com/answers/threadview?id=18979
https://www.fanucamerica.com/products/robots/robot-simulation-software-FANUC-ROBOGUIDE
https://www.roboticslibrary.org/
https://www.youtube.com/watch?v=mXw9ruZaxzQ
https://www.youtube.com/watch?v=9lMyI8vNVWA
https://manbeardgames.com/docs/tutorials/monogame-3-8/collision-detection/aabb-collision/#:~:text=Axis-Aligned%20Bounding%20Boxcollision%20detection%2C%20or%20AABB%20for%20short%2C,that%20defines%20the%20surface%20area%20of%20an%20object.
https://www.gamedev.net/tutorials/_/technical/game-programming/collision-detection-r735/
https://research.ncl.ac.uk/game/mastersdegree/gametechnologies/physicstutorials/4collisiondetection/Physics%20-%20Collision%20Detection.pdf
https://www.inkfood.com/collision-detection-with-svg/#:~:text=simple%20collision%20detection%20Basic%20bounding%20box%20collision%20detection%2C,to%20check%20if%20two%20of%20these%20rectangles%20overlap.
https://manbeardgames.com/docs/tutorials/monogame-3-8/collision-detection/circles/
https://math.stackexchange.com/questions/1232773/is-the-point-on-the-left-or-the-right-of-the-vector-in-2d-space
https://0fps.net/2015/01/18/collision-detection-part-2/#:~:text=To%20test%20if%20a%20pair%20of%20boxes%20intersect%2C,this%20depending%20on%20how%20the%20intervals%20are%20represented%3A
https://math.stackexchange.com/questions/2651710/simplest-way-to-determine-if-two-3d-boxes-intersect
https://arstechnica.com/civis/threads/3d-box-to-box-intersection-test.214255/
https://help.ubuntu.com/community/FilePermissions#:~:text=To%20change%20all%20the%20permissions%20of%20each%20file,755%20permission%2C%20since%20chmod%20-R%20assigns%20to%20both.
https://0fps.net/2015/01/18/collision-detection-part-2/
http://euro.ecom.cmu.edu/people/faculty/mshamos/1976GeometricIntersection.pdf
https://en.wikipedia.org/wiki/Interval_tree
https://en.wikipedia.org/wiki/R-tree
https://www.thousandwonders.net/Salar+de+Uyuni
jalais hill pontoise camille pissarro
adirondack park
https://www.onshape.com/en/education/
genoese towers in corsica
https://www.geometrictools.com/Documentation/IntersectionLineBox.pdf
https://englishstudyonline.org/words-to-use-instead-of-very/#:~:text=Words%20to%20Use%20Instead%20of%20VERY.%20Here%20is,very%20dear%20%3D%20cherished.%20very%20realistic%20%3D%20practical.
https://gwlucastrig.github.io/TinfourDocs/DelaunayIntro/index.html
https://www.intmath.com/math-art-code/delaunay-triangulation.php
https://github.com/darkskyapp/string-hash
https://www.geogebra.org/m/XUv5mXTm#material/c8mgacs8
https://forum.processing.org/two/categories/glsl-shaders.html
https://www.anumberfromtheghost.com/
https://www.stickittothestickman.com/
https://vrseat.vercel.app/
https://codeartemis.github.io/track/uUJTPz6M/drive
https://www.researchgate.net/publication/224299269_Collision_detection_A_survey
https://www.geeksforgeeks.org/collision-detection-csmacd/
'Heart of the Andes' (1859), by Frederic Edwin Church




1.	MVC pattern:
 https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller - 
2.	HOOPS/MVO Technical Overview:
http://docs.techsoft3d.com/visualize/3df/21/2113/HoopsMVO/tech_overview/TechnicalOverview_C.html
3.	The explanation of the scene graph term. In the lab classes, we will implement Tree node instead for a simplicity:
https://en.wikipedia.org/wiki/Scene_graph 

http://www.glfw.org/
http://nehe.gamedev.net/tutorial/lessons_01__05/22004/
https://glm.g-truc.net/
https://en.wikipedia.org/wiki/Blinn%E2%80%93Phong_shading_model
https://en.wikipedia.org/wiki/Rotation_matrix#Rotation_matrix_from_axis_and_angle
http://www.songho.ca/opengl/gl_transform.html
http://www.songho.ca/opengl/gl_projectionmatrix.html
https://en.wikipedia.org/wiki/Viewing_frustum
http://kaba.hilvi.org/homepage/blog/halfedge/halfedge.htm
http://www.flipcode.com/archives/The_Half-Edge_Data_Structure.shtml
https://www.graphics.rwth-aachen.de/media/papers/openmesh1.pdf
https://www.khronos.org/files/collada_spec_1_4.pdf
https://en.wikipedia.org/wiki/Octree
http://planning.cs.uiuc.edu/node214.html
https://www.scratchapixel.com/lessons/3d-basic-rendering/ray-tracing-rendering-a-triangle/barycentric-coordinates
1.	https://osgart.org/stuff/object_manipulation/ 
